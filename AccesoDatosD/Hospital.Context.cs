//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatosD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HospitalEntities : DbContext
    {
        public HospitalEntities()
            : base("name=HospitalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Dept> Depts { get; set; }
        public virtual DbSet<Doctor> Doctors { get; set; }
        public virtual DbSet<Emp> Emps { get; set; }
        public virtual DbSet<Hospital> Hospitals { get; set; }
        public virtual DbSet<Plantilla> Plantillas { get; set; }
        public virtual DbSet<Sala> Salas { get; set; }
        public virtual DbSet<Enfermo> Enfermoes { get; set; }
    
        public virtual ObjectResult<sp_actualizar_hospital_Result> sp_actualizar_hospital(Nullable<int> intCod_Hospital, string strNombre, string strDireccion, string strTelefono, Nullable<int> intNcama)
        {
            var intCod_HospitalParameter = intCod_Hospital.HasValue ?
                new ObjectParameter("intCod_Hospital", intCod_Hospital) :
                new ObjectParameter("intCod_Hospital", typeof(int));
    
            var strNombreParameter = strNombre != null ?
                new ObjectParameter("strNombre", strNombre) :
                new ObjectParameter("strNombre", typeof(string));
    
            var strDireccionParameter = strDireccion != null ?
                new ObjectParameter("strDireccion", strDireccion) :
                new ObjectParameter("strDireccion", typeof(string));
    
            var strTelefonoParameter = strTelefono != null ?
                new ObjectParameter("strTelefono", strTelefono) :
                new ObjectParameter("strTelefono", typeof(string));
    
            var intNcamaParameter = intNcama.HasValue ?
                new ObjectParameter("intNcama", intNcama) :
                new ObjectParameter("intNcama", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_actualizar_hospital_Result>("sp_actualizar_hospital", intCod_HospitalParameter, strNombreParameter, strDireccionParameter, strTelefonoParameter, intNcamaParameter);
        }
    
        public virtual ObjectResult<sp_eliminar_hospital_Result> sp_eliminar_hospital(Nullable<int> intCod_Hospital)
        {
            var intCod_HospitalParameter = intCod_Hospital.HasValue ?
                new ObjectParameter("intCod_Hospital", intCod_Hospital) :
                new ObjectParameter("intCod_Hospital", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_eliminar_hospital_Result>("sp_eliminar_hospital", intCod_HospitalParameter);
        }
    
        public virtual ObjectResult<sp_insertar_hospital_Result> sp_insertar_hospital(string strNombre, string strDireccion, string strTelefono, Nullable<int> intNcama)
        {
            var strNombreParameter = strNombre != null ?
                new ObjectParameter("strNombre", strNombre) :
                new ObjectParameter("strNombre", typeof(string));
    
            var strDireccionParameter = strDireccion != null ?
                new ObjectParameter("strDireccion", strDireccion) :
                new ObjectParameter("strDireccion", typeof(string));
    
            var strTelefonoParameter = strTelefono != null ?
                new ObjectParameter("strTelefono", strTelefono) :
                new ObjectParameter("strTelefono", typeof(string));
    
            var intNcamaParameter = intNcama.HasValue ?
                new ObjectParameter("intNcama", intNcama) :
                new ObjectParameter("intNcama", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertar_hospital_Result>("sp_insertar_hospital", strNombreParameter, strDireccionParameter, strTelefonoParameter, intNcamaParameter);
        }
    
        public virtual ObjectResult<sp_listar_hospital_Result> sp_listar_hospital(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_hospital_Result>("sp_listar_hospital", filtroParameter);
        }
    }
}
